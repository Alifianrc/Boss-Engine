workspace "BossEngine"
	architecture "x64"
	startproject "Game"

	configurations
	{
		"Debug",
		"Release",
		"Distribution"
	}

-- output directory name
	
outputDir = "%{cfg.buildcfg}-%{cfg.system}-%{cfg.architecture}"

-- include directory relative to folder
IncludeDir = {}
IncludeDir["GLFW"] = "BossEngine/Externals/GLFW/include"
IncludeDir["Glad"] = "BossEngine/Externals/Glad/include"
IncludeDir["ImGui"] = "BossEngine/Externals/imgui"
IncludeDir["glm"] = "BossEngine/Externals/glm"

include "BossEngine/Externals/GLFW"
include "BossEngine/Externals/Glad"
include "BossEngine/Externals/imgui"


-------------------------------------------------------------------------------------
------------------------ Engine project ---------------------------------------------	
-------------------------------------------------------------------------------------

-- This is Engine VS Project creation.
project "BossEngine"
	location "BossEngine"	-- folder location name
	kind "SharedLib"		-- set to sharedLib for dll.
	language "C++"
	staticruntime "off"
	
	targetdir ("bin/" .. outputDir .. "/%{prj.name}")	-- this for the output of .exe file.
	objdir ("obj/" .. outputDir .. "/%{prj.name}")		-- the output of .obj file generated by scripts.
	
	-- precompile header
	pchheader "bepch.h"
	pchsource "BossEngine/Source/bepch.cpp"
	
	-- take the whole file inside project
	files
	{
		"%{prj.name}/Source/**.h",
		"%{prj.name}/Source/**.cpp",
		"%{prj.name}/Externals/glm/glm/**.hpp",		
		"%{prj.name}/Externals/glm/glm/**.inl"		
	}
	
	-- include external libs.
	includedirs
	{
		"%{prj.name}/Source",
		"%{prj.name}/Externals/spdlog/include",
		"%{IncludeDir.GLFW}",
		"%{IncludeDir.Glad}",
		"%{IncludeDir.ImGui}",
		"%{IncludeDir.glm}"
	}
	
	links
	{
		"GLFW",
		"Glad",
		"ImGui",
		"opengl32.lib"
	}
	
	filter "system:windows"
		cppdialect "C++17"
		systemversion "latest"
		
		-- Linking input definition.
		defines
		{
			"BE_PLATFORM_WINDOWS",
			"BE_BUILD_DLL"
		}
		
		-- we're copying the .dll file from Engine to the game .exe
		postbuildcommands
		{
			("{COPY} %{cfg.buildtarget.relpath} ../bin/" .. outputDir .. "/Game")
		}
		
-- filter configuration of VS
	filter "configurations:Debug"
		defines "BE_DEBUG"
		runtime "Debug"
		symbols "On"
	
	filter "configurations:Release"
		defines "BE_RELEASE"
		runtime "Release"
		optimize "On"
	
	filter "configurations:Distribution"
		defines "BE_DIST"
		runtime "Release"
		optimize "On"	
		
		
-------------------------------------------------------------------------------------
------------------------ Game project -----------------------------------------------		
-------------------------------------------------------------------------------------
		
project "Game"
	location "Game"
	kind "ConsoleApp"	
	language "C++"
	staticruntime "off"
	
	targetdir ("bin/" .. outputDir .. "/%{prj.name}")
	objdir ("obj/" .. outputDir .. "/%{prj.name}")

	files
	{
		"%{prj.name}/Source/**.h",
		"%{prj.name}/Source/**.cpp"	
	}
	
	-- including all External libs + Engine
	includedirs
	{
		"BossEngine/Externals/spdlog/include",
		"BossEngine/Source",
		"%{IncludeDir.glm}"
	}
	
	-- Add linking to the engine so the game can use Engine API.
	links
	{
		"BossEngine"
	}
	
	filter "system:windows"
		cppdialect "C++17"
		systemversion "latest"
		
		defines
		{
			"BE_PLATFORM_WINDOWS"
		}
		
-- filter configuration of VS
	filter "configurations:Debug"
		defines "BE_DEBUG"
		runtime "Debug"
		symbols "On"
	
	filter "configurations:Release"
		defines "BE_RELEASE"
		runtime "Release"
		optimize "On"
	
	filter "configurations:Distribution"
		defines "BE_DIST"
		runtime "Release"
		optimize "On"	